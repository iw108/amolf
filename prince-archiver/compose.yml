version: "3.8"

x-env-variables: &env-variables
  DATA_DIR: /data/input/
  ARCHIVE_DIR: /data/output/
  CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672/
  AWS_BUCKET_NAME: mycostreams
  AWS_ACCESS_KEY_ID: aws-access-key-id
  AWS_SECRET_ACCESS_KEY: aws-access-key-id
  AWS_ENDPOINT_URL: http://s3:9090
  POSTGRES_DSN: postgresql://postgres:postgres@db:5432/postgres

services:

  prince:
    image: prince-archiver
    build:
      context: .
    command: ["python", "-m", "prince_archiver.entrypoints.timestep_generator"]
    environment:
      - DATA_DIR=/data/input
    volumes:
      - input_data:/data/input

  watcher:
    image: prince-archiver
    environment: *env-variables
    command: ["python", "-m", "prince_archiver.entrypoints.watcher"]
    volumes:
    - input_data:/data/input
    - output_data:/data/output
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  worker:
    image: prince-archiver
    command: ["celery", "-A", "prince_archiver.celery", "worker", "-l", "INFO"]
    environment: *env-variables
    volumes:
    - input_data:/data/input
    - output_data:/data/output
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  s3:
    image: adobe/s3mock:3.1.0
    ports:
      - 9090:9090
      - 9191:9191
    environment:
      - initialBuckets=mycostreams
      - validKmsKeys=arn:aws:kms:eu-central-1:1234567890:key/aws-access-key-id

  flower:
    image: mher/flower:0.9.7
    command: ['flower', '--broker=amqp://guest:guest@rabbitmq:5672/', '--port=5555']
    ports:
      - 5557:5555
    depends_on:
      rabbitmq:
        condition: service_healthy


volumes:
  input_data:
  output_data:
  postgres_data:
