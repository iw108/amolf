---
x-aws-env-variables: &aws-env-variables
  AWS_ACCESS_KEY_ID: aws-access-key-id
  AWS_SECRET_ACCESS_KEY: aws-access-key-id
  AWS_ENDPOINT_URL: http://s3:9090
  DATA_DIR: /data/input/
  REDIS_DSN: redis://redis:6379
  POSTGRES_DSN: postgresql+asyncpg://postgres:postgres@db:5432/postgres


services:
  timestep-generator:
    image: prince-archiver
    command:
      - "uvicorn"
      - "--factory"
      - "--host=0.0.0"
      - "prince_archiver.test_utils.mock_prince:create_app"
    environment:
      DATA_DIR: /data/input/  
    ports:
      - 8001:8000
    volumes:
      - input_data:/data/input/
    networks:
      - prince-archiver-e2e
  
  watcher:
    image: prince-archiver
    command: ["python", "-m", "prince_archiver.watcher.main"]
    environment: *aws-env-variables
    volumes:
      - input_data:/data/input/:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - prince-archiver-e2e

  upload-worker:
    image: prince-archiver
    command: ["arq", "prince_archiver.upload_worker.WorkerSettings"]
    environment:
      <<: *aws-env-variables
      AWS_BUCKET_NAME: mycostreams
    volumes:
      - input_data:/data/input/:r0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - prince-archiver-e2e

  db-migrations:
    image: prince-archiver
    command: ["alembic", "upgrade", "head"]
    environment: 
      POSTGRES_DSN: postgresql+asyncpg://postgres:postgres@db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
    networks:
      - prince-archiver-e2e
    profiles:
      - tools

  db:
    image: postgres:15-alpine
    ports:
      - 5431:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - prince-archiver-e2e

  redis:
    image: redis:7.2.4
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - prince-archiver-e2e

  s3:
    image: adobe/s3mock:3.1.0
    ports:
      - 9091:9090
    environment:
      initialBuckets: mycostreams
      validKmsKeys: arn:aws:kms:eu-central-1:1234567890:key/aws-access-key-id
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - prince-archiver-e2e


networks:
  prince-archiver-e2e:

volumes:
  input_data: 
